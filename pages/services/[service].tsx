import { footer, titles } from "../../constants";
import MainMenu from "../../components/mainMenu/mainMenu";
import { theme } from "../../styles/theme";
import HeaderService from "../../components/ServicePage/HeaderService";
import Head from "next/head";
import React from "../../public/SVG/technologies/react.svg";
import FooterComponent from "../../components/Footer";
import LetsTalk from "../../components/Services/LetsTalk";
import Information from "../../components/ServicePage/Information";
import BestSuitedFor from "../../components/ServicePage/BestSuitedFor";
import { useEffect, useState } from "react";
import { useIsMobile } from "../../services/hooks";
import { useRouter } from "next/router";
import { useQuery } from "@apollo/client";
import { GET_SERVICE } from "../../graphql/services/queries";
import { GetService } from "../../graphql/services/__generated__/GetService";
import Custom404 from "../404";
import WorkflowSetUp from "../../components/ServicePage/WorkflowSetUp";
import Faq from "../../components/ServicePage/FAQ";
import EmbodiedIdeasComponent from "../../components/Homepage/EmbodiedIdeas";

const colorWhite = theme.colors.white;
const colorBlack = theme.colors.black;

const Service = () => {
  const router = useRouter();
  const { service } = router.query;

  const { data, loading, error } = useQuery<GetService>(GET_SERVICE, {
    variables: { url: service },
  });
  const entry = data?.services?.data[0].attributes;
  const content = entry?.whyDoYouNeed;
  const bestSuitedFor = entry?.bestSuitedFor;
  const workflow = entry?.workflow;
  const faqIntro = entry?.faq.intro;
  const faqItems = entry?.faq.items;
  const projects = entry?.projects?.data;
  const icon = entry?.icon.data?.attributes;

    const {isMobile, isTablet, isSmallTablet} = useIsMobile();
  

  const [menuColor, setMenuColor] = useState(isMobile || isTablet || isSmallTablet ? colorBlack : "none");
  const handleScroll = () => {
    window.scrollY >= 20 ? setMenuColor(colorBlack) : setMenuColor("none");
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);

    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const menuColorCondition = isMobile || isTablet || isSmallTablet ? colorBlack : menuColor;

  const renderCondition =
    entry &&
    content &&
    bestSuitedFor &&
    workflow &&
    faqIntro &&
    faqItems &&
    projects &&
    icon;

  if (loading) return null;
  if (error) return <Custom404 />;

  return (
    <>
      {renderCondition && (
        <>
          <Head>
            <title>{entry.name}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <>
            <MainMenu
              backgroundColor={menuColorCondition}
              titlesColor={colorWhite}
              titles={titles}
            >
              <HeaderService
                title={entry.name}
                titleSize={"48px"}
                text={entry.description}
                textWidth={"657px"}
                icon={icon}
              />
              <Information content={content} />
              <BestSuitedFor
                title={bestSuitedFor?.intro}
                info={bestSuitedFor?.items}
              />
              <WorkflowSetUp title={workflow.intro} content={workflow.items} />
              <EmbodiedIdeasComponent
                bgColor={theme.colors.yellow}
                elementsColor={theme.colors.black}
                projects={projects}
                disablePadding
                disableSeeMore
              />
              <Faq title={faqIntro} items={faqItems} />
              <LetsTalk
                flexDirection={"column-reverse"}
                title={"Ready to Start?"}
                text={"Get everything you need for the project initiation."}
              />
            </MainMenu>
            <FooterComponent />
          </>
        </>
      )}
    </>
  );
};

export default Service;
